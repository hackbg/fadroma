[package]
name    = "fadroma-platform-scrt"
version = "0.1.0"
edition = "2018"
authors = [
  "Adam A. <adam@hack.bg>",
  "Asparuh Kamenov <aakamenov@hack.bg>",
]

[lib]
path = "lib.rs"

[dependencies]
serde = { version = "1.0.103", default-features = false, features = ["derive"] }
schemars = { version = "0.7" }

cosmwasm-std = { version = "0.10", package = "secret-cosmwasm-std" }
cosmwasm-storage = { version = "0.10", package = "secret-cosmwasm-storage" }
secret-toolkit = "0.2.0"

[dev-dependencies]
cosmwasm-schema = "0.10.1"

[features]
default = []
# staking exposes bindings to a required staking moudle in the runtime, via new
# CosmosMsg types, and new QueryRequest types. This should only be enabled on contracts
# that require these types, so other contracts can be used on systems with eg. PoA consensus
staking = ["cosmwasm-std/staking"]
# backtraces provides much better context at runtime errors (in non-wasm code)
# at the cost of a bit of code size and performance.
backtraces = ["cosmwasm-std/backtraces"]
# Debug prints enable printing log messages to the logging system of the enclave
# from inside your contract. This will only work in enclaves compiled in SW mode
# and loading the contract for execution will fail if this is used a HW mode
# enclave. This is done in order to provent leaking secrets in production.
debug-print = ["cosmwasm-std/debug-print"]
