import{_ as s,c as a,o as n,a as o}from"./app.3eaf65bf.js";const i=JSON.parse('{"title":"Fadroma Support for Secret Network","description":"","frontmatter":{},"headers":[{"level":2,"title":"Overriding the SecretJS implementation","slug":"overriding-the-secretjs-implementation"},{"level":2,"title":"Overriding the signer (encryptionUtils f.k.a. EnigmaUtils)","slug":"overriding-the-signer-encryptionutils-f-k-a-enigmautils"},{"level":2,"title":"Fetching the default gas limit from the chain","slug":"fetching-the-default-gas-limit-from-the-chain"}],"relativePath":"platforms/scrt/README.md","lastUpdated":1667563005000}'),l={name:"platforms/scrt/README.md"},p=o(`<h1 id="fadroma-support-for-secret-network" tabindex="-1">Fadroma Support for Secret Network <a class="header-anchor" href="#fadroma-support-for-secret-network" aria-hidden="true">#</a></h1><p><a href="https://www.npmjs.com/package/@fadroma/scrt" target="_blank" rel="noreferrer"><img src="https://img.shields.io/npm/v/@fadroma/scrt?color=%2365b34c&amp;label=%40fadroma%2Fscrt&amp;style=for-the-badge" alt=""></a></p><h2 id="overriding-the-secretjs-implementation" tabindex="-1">Overriding the SecretJS implementation <a class="header-anchor" href="#overriding-the-secretjs-implementation" aria-hidden="true">#</a></h2><p>By default the static property <code>Scrt.SecretJS</code> points to the SecretJS module from the dependencies of <code>@fadroma/scrt</code> (see <a href="./package.json"><code>package.json</code></a> for version info.)</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Scrt</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@fadroma/scrt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> raw </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Scrt</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">raw</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(raw</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SecretJS</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Scrt</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SecretJS)</span></span>
<span class="line"></span></code></pre></div><p>To use a different version of SecretJS with <code>@fadroma/scrt</code>, install that version in your package (next to <code>@fadroma/scrt</code>) and import it (<code>import * as SecretJS from &#39;secretjs&#39;</code>).</p><p>By setting <code>Scrt.SecretJS</code> to a custom implementation, all subsequently created <code>Scrt</code> instances will use that implementation. You can also override it for a specific <code>Scrt</code> instance, in order to use multiple versions of the platform client side by side.</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#676E95;">// import * as SecretJS from &#39;secretjs&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> SecretJS </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">SecretNetworkClient</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span><span style="color:#F07178;"> () </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">params</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">params</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">param</span><span style="color:#89DDFF;">:{</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{&quot;max_gas&quot;:&quot;1&quot;,&quot;max_bytes&quot;:&quot;2&quot;}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">Wallet</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;">/* mock */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> mod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Scrt</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mod</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> SecretJS </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(mod</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SecretJS</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> SecretJS)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">notEqual</span><span style="color:#A6ACCD;">(mod</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SecretJS</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> raw</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SecretJS)</span></span>
<span class="line"></span></code></pre></div><p>The used <code>SecretJS</code> module will provide the <code>Wallet</code> and <code>SecretNetworkClient</code> classes, whose instances are provided to <code>ScrtAgent</code> by <code>Scrt#getAgent</code>, so that the agent can interact with the chain by signing and broadcasting transactions.</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> agent </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">await</span><span style="color:#A6ACCD;"> mod</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAgent</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ok</span><span style="color:#A6ACCD;">(agent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wallet </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SecretJS</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Wallet</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ok</span><span style="color:#A6ACCD;">(agent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">api    </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SecretJS</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">SecretNetworkClient</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="overriding-the-signer-encryptionutils-f-k-a-enigmautils" tabindex="-1">Overriding the signer (<code>encryptionUtils</code> f.k.a. <code>EnigmaUtils</code>) <a class="header-anchor" href="#overriding-the-signer-encryptionutils-f-k-a-enigmautils" aria-hidden="true">#</a></h2><p>In Keplr contexts, you may want to use the signer returned by <code>window.getEnigmaUtils(chainId)</code>. Here&#39;s how to pass it into <code>ScrtAgent</code>.</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ScrtAgent</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@fadroma/scrt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> encryptionUtils </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Symbol</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;">// use window.getEnigmaUtils(chainId) to get this</span></span>
<span class="line"></span></code></pre></div><ul><li><strong>Preferred:</strong> override from <code>Scrt#getAgent</code>.</li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> agent1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">await</span><span style="color:#A6ACCD;"> raw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAgent</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> encryptionUtils </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(agent1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">api</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">encryptionUtils</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> encryptionUtils)</span></span>
<span class="line"></span></code></pre></div><ul><li><strong>Fallback:</strong> override through <code>ScrtAgent</code> constructor. You shouldn&#39;t need to do this. Just use <code>Scrt#getAgent</code> to pass <code>encryptionUtils</code> to <code>new SecretNetworkClient</code> at construction time like the SecretJS API expects.</li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> agent2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ScrtAgent</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">api</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">wallet</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> encryptionUtils </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(agent2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">api</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">encryptionUtils</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> encryptionUtils)</span></span>
<span class="line"></span></code></pre></div><ul><li><strong>Fallback 2:</strong> you can use <code>Object.assign(agent.api, { encryptionUtils })</code> to bypass TSC warning about accessing a private member and manually override the <code>encryptionUtils</code> property of the <code>SecretNetworkClient</code> instance used by your <code>ScrtAgent</code>.</li></ul><h2 id="fetching-the-default-gas-limit-from-the-chain" tabindex="-1">Fetching the default gas limit from the chain <a class="header-anchor" href="#fetching-the-default-gas-limit-from-the-chain" aria-hidden="true">#</a></h2><p>By default, the <code>Scrt</code> class exposes a conservative gas limit of 1 000 000 units.</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Scrt</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@fadroma/scrt</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(Scrt</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">defaultFees</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">send</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gas</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">   </span><span style="color:#F78C6C;">1000000</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(Scrt</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">defaultFees</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">upload</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gas</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1000000</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(Scrt</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">defaultFees</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">init</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gas</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">   </span><span style="color:#F78C6C;">1000000</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">equal</span><span style="color:#A6ACCD;">(Scrt</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">defaultFees</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">exec</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gas</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">   </span><span style="color:#F78C6C;">1000000</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>When constructing a <code>ScrtAgent</code> using <code>Scrt#getAgent</code>, Fadroma tries to fetch the block limit from the chain:</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">((</span><span style="color:#89DDFF;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Scrt</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAgent</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">fees)</span></span>
<span class="line"></span></code></pre></div>`,23),e=[p];function t(c,r,D,y,A,F){return n(),a("div",null,e)}const d=s(l,[["render",t]]);export{i as __pageData,d as default};
