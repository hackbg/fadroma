name: Fadroma (TypeScript)
on: [push]
jobs:
  js:
    name: pnpm ci
    runs-on: ubuntu-latest
    steps:
      - name: Clone with submodules
        uses: actions/checkout@v2
        with: { submodules: recursive }
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with: { version: 7.29.1 }
      - name: Setup Node 19
        uses: actions/setup-node@v3
        with:
          node-version: "19"
          check-latest: true
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - run: |
          mkdir -p wasm
          rustup target add wasm32-unknown-unknown
          pnpm --version
          pnpm i --frozen-lockfile
          FADROMA_BUILD_RAW=1 TEMP="$(dirname $(pwd))" TMP="$(dirname $(pwd))" pnpm run ci
      - name: Create, build, and deploy project
        run: |
          ../fadroma/fadroma.cli.cjs create testproject test1 test2
          cd testproject
          cat package.json
          cat fadroma.json
          cat api.ts
          cat ops.ts
          echo ''{"name":"testproject","main":"api.ts","type":"module","version":"0.1.0","dependencies":{"@fadroma/agent":"link:../fadroma/agent","@fadroma/scrt":"link:../fadroma/scrt"},"devDependencies":{"@hackbg/fadroma":"link:../fadroma","@hackbg/ganesha":"link:../fadroma/ensuite/ganesha","typescript":"^5"},"scripts":{"build":"fadroma build","status":"fadroma status","mocknet":"FADROMA_CHAIN=Mocknet fadroma","devnet":"FADROMA_CHAIN=ScrtDevnet fadroma","testnet":"FADROMA_CHAIN=ScrtTestnet fadroma","mainnet":"FADROMA_CHAIN=ScrtMainnet fadroma"}}'' > package.json
          pnpm i
          pnpm build
          pnpm mocknet deploy
          pnpm devnet deploy
          cd ..
          rm -rf testproject

# See https://github.com/pnpm/pnpm/issues/6424 for why not Node 20
