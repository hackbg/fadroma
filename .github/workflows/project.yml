name: Fadroma (Project)

on: [push]

jobs:

  # Here we test creating a project from NPM.
  project-gh:
    name: Create and build a project by compiled checkout
    runs-on: ubuntu-latest
    steps:
      - name: Clone with submodules
        uses: actions/checkout@v2
        with: { submodules: recursive }
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with: { version: 7.29.1, run_install: false }
      - name: Setup Node 19
        uses: actions/setup-node@v3
        with:
          node-version: "19"
          check-latest: true
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Setup Rust (stable, wasm32-unknown-unknown)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - name: Build Fadroma to NPM equivalent
        run: |
          pnpm i # install with dev dependencies
          pnpm exec ubik fix # compile to js, don't typecheck or run tests
          sudo ln -s `which true` /usr/local/bin/husky # stub husky
          pnpm i -P # remove dev dependencies
      - name: Create project
        run: |
          sudo apt install -y wabt binaryen
          export FADROMA="$(pwd)"
          cd ..
          npx ./fadroma create myproject mycontract1 mycontract2
          cd myproject
          cat package.json
          echo '{"name":"myproject","main":"api.ts","type":"module","version":"0.1.0","dependencies":{"@fadroma/agent":"link:../fadroma/agent","@fadroma/scrt":"link:../fadroma/scrt"},"devDependencies":{"@hackbg/fadroma":"link:../fadroma","@hackbg/ganesha":"link:../fadroma/ensuite/ganesha","typescript":"^5"},"scripts":{"build":"fadroma build","status":"fadroma status","mocknet":"FADROMA_PROJECT=./ops.ts FADROMA_CHAIN=Mocknet fadroma","devnet":"FADROMA_PROJECT=./ops.ts FADROMA_CHAIN=ScrtDevnet fadroma","testnet":"FADROMA_PROJECT=./ops.ts FADROMA_CHAIN=ScrtTestnet fadroma","mainnet":"FADROMA_PROJECT=./ops.ts FADROMA_CHAIN=ScrtMainnet fadroma"}}' > package.json
          cat package.json
          pnpm i
          cat fadroma.yml
          cat api.ts
          cat ops.ts
          npm run build
          npm run mocknet deploy
          npm run devnet deploy
          npm run devnet export
          npm run devnet reset
          cd ..
          rm -rf myproject

  # Here we test creating a project from NPM.
  project-npm:
    # `npm/` tags are automatically pushed by `@hackbg/ubik`
    # after publishing the packages to NPM for real.
    # TODO: Add retry in case NPM caches are slow to refresh after publication.
    if: "startsWith(github.ref, 'refs/tags/npm/')"
    name: Create and build a project by published package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 20]
    steps:

      - name: Setup Node ${{matrix.node-version}}
        uses: actions/setup-node@v3
        with:
          node-version: "${{matrix.node-version}}"
          check-latest: true

      - name: Setup Rust (stable, wasm32-unknown-unknown)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Create project through NPX
        run: |
          sudo apt install -y wabt binaryen
          npx @hackbg/fadroma@latest create myproject mycontract1 mycontract2
          cd myproject
          cat package.json
          cat fadroma.yml
          cat api.ts
          cat ops.ts
          npm run build
          npm run mocknet deploy
          npm run devnet deploy
          npm run devnet export
          npm run devnet reset
