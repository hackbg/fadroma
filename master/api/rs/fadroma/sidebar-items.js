window.SIDEBAR_ITEMS = {"macro":[["entrypoint","Define the `mod wasm` entrypoint of production builds."],["impl_canonize_default","Use on any type that does not contain a [`cosmwasm_std::Addr`]. The implementation simply returns `Ok(self)` without doing any transformation."],["impl_contract_harness","Generate a struct and implement [`ContractHarness`] for the given contract module. Alternatively, if using the derive contract macro, specify the third argument which is the implementation struct to use."],["namespace","Construct a storage namespace. It creates a zero-sized struct with the given type name and implements [`Namespace`] on it with the provied byte slice literal."]],"mod":[["admin","Transaction authentication by pre-configured admin address."],["core",""],["crypto","SHA256 hashing and pseudo rng. Feature flag: `crypto`"],["ensemble","Test multiple contract interactions using unit tests. Feature flag: `ensemble`"],["killswitch","Emergency pause and termination of contracts. You MUST implement [admin] in your contract if you want to use this module."],["prelude","Start here. `use fadroma::prelude::*` to get the essentials for writing smart contracts with Fadroma."],["scrt","Secret Network specific utilities and contracts that are commonly used when developing smart contracts for it. Feature flag: `scrt`"],["storage","Utilities for interacting with the native key-value storage."],["tokens",""]]};