window.SIDEBAR_ITEMS = {"constant":[["MOCK_CONTRACT_ADDR",""]],"fn":[["digit_sum",""],["mock_dependencies","Creates all external requirements that can be injected for unit tests."],["mock_dependencies_with_balance","Creates all external requirements that can be injected for unit tests."],["mock_dependencies_with_balances","Initializes the querier along with the mock_dependencies. Sets all balances provided (you must explicitly set contract balance if desired)."],["mock_env","Returns a default enviroment with height, time, chain_id, and contract address You can submit as is to most contracts, or modify height/time if you want to test for expiration."],["mock_info","Just set sender and funds for the message. This is intended for use in test code only."],["mock_wasmd_attr","Only for test code. This bypasses assertions in new, allowing us to create _* Attributes to simulate responses from the blockchain"],["riffle_shuffle","Performs a perfect shuffle (in shuffle)"]],"struct":[["BankQuerier",""],["MockApi",""],["MockQuerier","MockQuerier holds an immutable table of bank balances and configurable handlers for Wasm queries and custom queries."],["StakingQuerier",""]],"type":[["MockQuerierCustomHandlerResult","The same type as cosmwasm-stdâ€™s QuerierResult, but easier to reuse in cosmwasm-vm. It might diverge from QuerierResult at some point."],["MockStorage",""]]};