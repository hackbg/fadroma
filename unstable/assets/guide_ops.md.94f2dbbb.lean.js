import{_ as s,c as n,o as a,a as o}from"./app.b18454ba.js";const A=JSON.parse('{"title":"Deploying and configuring smart contracts with Fadroma Ops","description":"","frontmatter":{},"headers":[{"level":2,"title":"Example: deploying a contract","slug":"example-deploying-a-contract"},{"level":2,"title":"How to define commands","slug":"how-to-define-commands"},{"level":2,"title":"Deployment context","slug":"deployment-context"},{"level":3,"title":"How deployments are stored","slug":"how-deployments-are-stored"},{"level":2,"title":"How to deploy contracts","slug":"how-to-deploy-contracts"},{"level":2,"title":"Templates and factories","slug":"templates-and-factories"},{"level":3,"title":"Example: deploying a factory contract with a template","slug":"example-deploying-a-factory-contract-with-a-template"},{"level":2,"title":"Deploying in bulk","slug":"deploying-in-bulk"},{"level":2,"title":"Class-based deployments","slug":"class-based-deployments"},{"level":2,"title":"Deployments","slug":"deployments"},{"level":2,"title":"The deploy procedure","slug":"the-deploy-procedure"},{"level":2,"title":"About operations and the operation context","slug":"about-operations-and-the-operation-context"},{"level":2,"title":"Build for production","slug":"build-for-production"},{"level":3,"title":"Upload the code","slug":"upload-the-code"},{"level":3,"title":"Instantiate the contract(s)","slug":"instantiate-the-contract-s"},{"level":3,"title":"Get a contract client","slug":"get-a-contract-client"},{"level":2,"title":"Deployment idioms","slug":"deployment-idioms"},{"level":3,"title":"Stacking operations","slug":"stacking-operations"},{"level":3,"title":"Working with an existing deployment","slug":"working-with-an-existing-deployment"},{"level":3,"title":"Destructuring context","slug":"destructuring-context"},{"level":3,"title":"Adding static init method to client class","slug":"adding-static-init-method-to-client-class"}],"relativePath":"guide/ops.md","lastUpdated":1661359727000}'),l={name:"guide/ops.md"},p=o("",78),e=[p];function t(c,r,y,F,D,i){return a(),n("div",null,e)}const C=s(l,[["render",t]]);export{A as __pageData,C as default};
