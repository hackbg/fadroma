import{_ as e,c as t,o,a}from"./app.66afa4f2.js";const q=JSON.parse('{"title":"Composable SNIP-20","description":"","frontmatter":{},"headers":[{"level":2,"title":"Usage examples:","slug":"usage-examples"},{"level":2,"title":"Troubleshooting","slug":"troubleshooting"}],"relativePath":"crates/fadroma/snip20_impl/README.md","lastUpdated":1658115337000}'),r={name:"crates/fadroma/snip20_impl/README.md"},n=a('<h1 id="composable-snip-20" tabindex="-1">Composable SNIP-20 <a class="header-anchor" href="#composable-snip-20" aria-hidden="true">#</a></h1><p><strong>Based on the SNIP-20 Reference Implementation in:</strong> <a href="https://github.com/enigmampc/snip20-reference-impl" target="_blank" rel="noopener noreferrer">https://github.com/enigmampc/snip20-reference-impl</a><strong>Forked at:</strong> <a href="https://github.com/enigmampc/snip20-reference-impl/tree/5bde5789a856462d1b77b02018867c56620022c5" target="_blank" rel="noopener noreferrer">5bde578</a></p><p>This is an implementation of a <a href="https://github.com/SecretFoundation/SNIPs/blob/master/SNIP-20.md" target="_blank" rel="noopener noreferrer">SNIP-20</a>, <a href="https://github.com/SecretFoundation/SNIPs/blob/master/SNIP-21.md" target="_blank" rel="noopener noreferrer">SNIP-21</a>, <a href="https://github.com/SecretFoundation/SNIPs/blob/master/SNIP-22.md" target="_blank" rel="noopener noreferrer">SNIP-22</a> and <a href="https://github.com/SecretFoundation/SNIPs/blob/master/SNIP-23.md" target="_blank" rel="noopener noreferrer">SNIP-23</a> compliant token contract.</p><p>At the time of token creation you may configure:</p><ul><li>Public Total Supply: If you enable this, the token&#39;s total supply will be displayed whenever a TokenInfo query is performed. DEFAULT: false</li><li>Enable Deposit: If you enable this, you will be able to convert from SCRT to the token.* DEFAULT: false</li><li>Enable Redeem: If you enable this, you will be able to redeem your token for SCRT.* It should be noted that if you have redeem enabled, but deposit disabled, all redeem attempts will fail unless someone has sent SCRT to the token contract. DEFAULT: false</li><li>Enable Mint: If you enable this, any address in the list of minters will be able to mint new tokens. The admin address is the default minter, but can use the set/add/remove_minters functions to change the list of approved minting addresses. DEFAULT: false</li><li>Enable Burn: If you enable this, addresses will be able to burn tokens. DEFAULT: false</li></ul><p>*:The conversion rate will be 1 uscrt for 1 minimum denomination of the token. This means that if your token has 6 decimal places, it will convert 1:1 with SCRT. If your token has 10 decimal places, it will have an exchange rate of 10000 SCRT for 1 token. If your token has 3 decimal places, it will have an exchange rate of 1000 tokens for 1 SCRT. You can use the exchange_rate query to view the exchange rate for the token. The query response will display either how many tokens are worth 1 SCRT, or how many SCRT are worth 1 token. That is, the response lists the symbol of the coin that has less value (either SCRT or the token), and the number of those coins that are worth 1 of the other.</p><h2 id="usage-examples" tabindex="-1">Usage examples: <a class="header-anchor" href="#usage-examples" aria-hidden="true">#</a></h2><p>To create a new token:</p><p><code>secretcli tx compute instantiate &lt;code-id&gt; &#39;{&quot;name&quot;:&quot;&lt;your_token_name&gt;&quot;,&quot;symbol&quot;:&quot;&lt;your_token_symbol&gt;&quot;,&quot;admin&quot;:&quot;&lt;optional_admin_address_defaults_to_the_from_address&gt;&quot;,&quot;decimals&quot;:&lt;number_of_decimals&gt;,&quot;initial_balances&quot;:[{&quot;address&quot;:&quot;&lt;address1&gt;&quot;,&quot;amount&quot;:&quot;&lt;amount_for_address1&gt;&quot;}],&quot;prng_seed&quot;:&quot;&lt;base64_encoded_string&gt;&quot;,&quot;config&quot;:{&quot;public_total_supply&quot;:&lt;true_or_false&gt;,&quot;enable_deposit&quot;:&lt;true_or_false&gt;,&quot;enable_redeem&quot;:&lt;true_or_false&gt;,&quot;enable_mint&quot;:&lt;true_or_false&gt;,&quot;enable_burn&quot;:&lt;true_or_false&gt;}}&#39; --label &lt;token_label&gt; --from &lt;account&gt;</code></p><p>The <code>admin</code> field is optional and will default to the &quot;--from&quot; address if you do not specify it. The <code>initial_balances</code> field is optional, and you can specify as many addresses/balances as you like. The <code>config</code> field as well as every field in the <code>config</code> is optional. Any <code>config</code> fields not specified will default to <code>false</code>.</p><p>To deposit: <em><strong>(This is public)</strong></em></p><p><code>secretcli tx compute execute &lt;contract-address&gt; &#39;{&quot;deposit&quot;: {}}&#39; --amount 1000000uscrt --from &lt;account&gt;</code></p><p>To send SSCRT:</p><p><code>secretcli tx compute execute &lt;contract-address&gt; &#39;{&quot;transfer&quot;: {&quot;recipient&quot;: &quot;&lt;destination_address&gt;&quot;, &quot;amount&quot;: &quot;&lt;amount_to_send&gt;&quot;}}&#39; --from &lt;account&gt;</code></p><p>To set your viewing key:</p><p><code>secretcli tx compute execute &lt;contract-address&gt; &#39;{&quot;create_viewing_key&quot;: {&quot;entropy&quot;: &quot;&lt;random_phrase&gt;&quot;}}&#39; --from &lt;account&gt;</code></p><p>To check your balance:</p><p><code>secretcli q compute query &lt;contract-address&gt; &#39;{&quot;balance&quot;: {&quot;address&quot;:&quot;&lt;your_address&gt;&quot;, &quot;key&quot;:&quot;your_viewing_key&quot;}}&#39;</code></p><p>To view your transaction history:</p><p><code>secretcli q compute query &lt;contract-address&gt; &#39;{&quot;transfer_history&quot;: {&quot;address&quot;: &quot;&lt;your_address&gt;&quot;, &quot;key&quot;: &quot;&lt;your_viewing_key&gt;&quot;, &quot;page&quot;: &lt;optional_page_number&gt;, &quot;page_size&quot;: &lt;number_of_transactions_to_return&gt;}}&#39;</code></p><p>To withdraw: <em><strong>(This is public)</strong></em></p><p><code>secretcli tx compute execute &lt;contract-address&gt; &#39;{&quot;redeem&quot;: {&quot;amount&quot;: &quot;&lt;amount_in_smallest_denom_of_token&gt;&quot;}}&#39; --from &lt;account&gt;</code></p><p>To view the token contract&#39;s configuration:</p><p><code>secretcli q compute query &lt;contract-address&gt; &#39;{&quot;token_config&quot;: {}}&#39;</code></p><p>To view the deposit/redeem exchange rate:</p><p><code>secretcli q compute query &lt;contract-address&gt; &#39;{&quot;exchange_rate&quot;: {}}&#39;</code></p><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-hidden="true">#</a></h2><p>All transactions are encrypted, so if you want to see the error returned by a failed transaction, you need to use the command</p><p><code>secretcli q compute tx &lt;TX_HASH&gt;</code></p>',29),s=[n];function l(i,u,c,d,p,m){return o(),t("div",null,s)}var f=e(r,[["render",l]]);export{q as __pageData,f as default};
