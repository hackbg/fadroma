import{_ as s,c as a,o as n,a as e}from"./app.b18454ba.js";const u=JSON.parse('{"title":"Feature roadmap","description":"","frontmatter":{},"headers":[{"level":2,"title":"Performance","slug":"performance"},{"level":2,"title":"Deliverability","slug":"deliverability"},{"level":2,"title":"Portability","slug":"portability"},{"level":2,"title":"Usability","slug":"usability"}],"relativePath":"ROADMAP.ts.md","lastUpdated":1661357066000}'),l={name:"ROADMAP.ts.md"},o=e(`<h1 id="feature-roadmap" tabindex="-1">Feature roadmap <a class="header-anchor" href="#feature-roadmap" aria-hidden="true">#</a></h1><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> assert </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">assert</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="performance" tabindex="-1">Performance <a class="header-anchor" href="#performance" aria-hidden="true">#</a></h2><ul><li><strong>Resumable deployments:</strong> so that working on a sequence of operations does not get slower the longer the sequence gets.</li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#676E95;">// TODO test that deploy is resumable</span></span>
<span class="line"></span></code></pre></div><h2 id="deliverability" tabindex="-1">Deliverability <a class="header-anchor" href="#deliverability" aria-hidden="true">#</a></h2><ul><li><strong>WIP:</strong> Publish JS packages to NPM</li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#676E95;">// TODO test that there are npm urls corresponding to the repo contents...</span></span>
<span class="line"></span></code></pre></div><ul><li>Publish Rust crates to Cargo</li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#676E95;">// TODO test that there are cargo urls corresponding to the repo contents...</span></span>
<span class="line"></span></code></pre></div><ul><li>Deliver through <code>npx fadroma</code></li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#676E95;">// TODO test project setup here...</span></span>
<span class="line"></span></code></pre></div><ul><li>Deliver as shell with global <code>fadroma</code> command by calling <code>nix-shell https://fadroma.tech/nix</code></li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#676E95;">// TODO test download link here...</span></span>
<span class="line"></span></code></pre></div><ul><li>Deliver as monolithic binary with semantic GUI (DOM or other)</li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#676E95;">// TODO test download link here...</span></span>
<span class="line"></span></code></pre></div><h2 id="portability" tabindex="-1">Portability <a class="header-anchor" href="#portability" aria-hidden="true">#</a></h2><ul><li>Be able to run a deploy procedure in a browser</li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#676E95;">// optional, run with command argument: TODO test in containerized browser here...</span></span>
<span class="line"></span></code></pre></div><ul><li>Support for seamlessly building code from remote URLs (e.g. Git)</li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#676E95;">// TODO test here...</span></span>
<span class="line"></span></code></pre></div><ul><li>Support for remote builders and devnets</li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ManagedDevnet</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mockDevnetManager</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./_Harness</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1.2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1.3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">manager</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">mockDevnetManager</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">try</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">devnet</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getScrtDevnet</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">version</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">manager</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">url</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">ok</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">devnet</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">instanceof</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ManagedDevnet</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">devnet</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">respawn</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Respawned</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">devnet</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">save</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">catch</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warn</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">) </span><span style="color:#676E95;">// TODO use whole devnet manager with mocked devnet init</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">finally</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">manager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="usability" tabindex="-1">Usability <a class="header-anchor" href="#usability" aria-hidden="true">#</a></h2><ul><li>Fadroma Starter Pack</li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#A6ACCD;">assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ok</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://github.com/hackbg/fadroma-example</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"></span></code></pre></div><ul><li>Fadroma Web Dashboard <ul><li>Show list of deployment and contracts in selected deployment</li><li>Render generated and written documentation from project and dependencies</li><li>Allow deployments and operations to be run from the browser</li><li>Render source of smart contracts but don&#39;t allow editing for now</li><li>Embedded instance of official transaction explorer</li><li><code>secretcli q tx</code> and <code>secretcli q compute tx</code> in the same view</li><li>Platform and connection selector</li><li>Drop compiled contract blobs into GUI and have them expose their methods. Pass them each other&#39;s addresses to test inter-contract communication in a sandbox.</li><li>Drag and drop multisig transaction signer <ul><li>Support system keystore in the same way as <code>secretcli</code> does to securely sign transactions with the user&#39;s mainnet/testnet private keys</li></ul></li></ul></li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#676E95;">// TODO run test suite of dashboard module here...</span></span>
<span class="line"></span></code></pre></div><ul><li>Fadroma Test Track <ul><li>View and publish rich test and coverage reports, allow tests to be re-ran/edited from GUI</li><li>Render interaction diagrams from logs of test runs to display inter-contract communication</li><li>Use profiling-instrumented builds in JS-based integration tests to get full-stack coverage</li><li>Gas profiling - calculate cost of each opcode without having to wait for block timings. Compile a crypto-less <code>cosmwasm-vm</code> if necessary.</li><li>See if literate programming can be extended to <code>cargo doc</code>/<code>rustc</code>... <ul><li>separate doc comments from attribute macros in the parser?</li></ul></li><li>Time travel: rewind/force next block</li><li>Spawn terminals with different secretcli configs for hammer tuning</li></ul></li></ul><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#676E95;">// TODO run test suite of dashboard module here...</span></span>
<span class="line"></span></code></pre></div>`,30),p=[o];function t(r,c,i,y,d,F){return n(),a("div",null,p)}const A=s(l,[["render",t]]);export{u as __pageData,A as default};
