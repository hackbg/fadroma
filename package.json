{
  "name": "@hackbg/fadroma",
  "version": "1.3.0",
  "repository": { "type": "git", "url": "https://github.com/hackbg/fadroma" },
  "type": "module",
  "main": "fadroma.ts",
  "browser": "fadroma.browser.ts",
  "description": "CosmWasm dApp framework.",
  "bin": { "fadroma": "fadroma.cli.cjs" },
  "files": [
    "*.ts",
    "tsconfig.json",
    "Dockerfile",
    "build.impl.mjs",
    "devnets/*",
    "logo.svg",
    "!agent/*",
    "!connect/*",
    "!examples/*",
    "!coverage/*",
    "!target/*",
    "CONTRIBUTING.md",
    "CODE_OF_CONDUCT.md",
    "TROUBLESHOOTING.md",
    "LICENSE"
  ],
  "license": "AGPL-3.0-only",
  "scripts": {

    "start": "cmds-ts ./FadromaCommands.ts",

    "prepare": "husky install",

    "ubik": "pnpm i && pnpm clean && pnpm check && ubik",
    "ubik:all": "time sh -c 'pnpm ubik wet && cd agent && ubik wet && cd ../connect && ubik wet && cd scrt && ubik wet'",

    "check": "time tsc --noEmit",

    "test": "time ensuite GUIDE.ts.md",
    "test:build":   "time ensuite spec/Build.spec.ts.md",
    "test:deploy":  "time ensuite spec/Deploy.spec.ts.md",
    "test:devnet":  "time ensuite spec/Devnet.spec.ts.md",
    "test:factory": "time ensuite spec/Factory.spec.ts.md",
    "test:project": "time ensuite spec/Project.spec.ts.md",
    "test:scrt":    "time ensuite spec/Scrt.spec.ts.md",
    "test:cw":      "time ensuite spec/CW.spec.ts.md",

    "cov": "time ensuite-cov GUIDE.ts.md",
    "cov:factory": "time ensuite-cov spec/Factory.spec.ts.md",

    "ci": "node --version && npm --version && pnpm --version && pwd && ls -al && pnpm clean && concurrently npm:check npm:cov && pnpm ubik dry && ls -al",
    "clean": "rm -rf *.cjs.js *.esm.js *.d.ts packages/*/dist packages/*/types",

    "build": "./fadroma.cli.cjs build",
    "build:example": "FADROMA_REBUILD=1 FADROMA_BUILD_WORKSPACE_ROOT=. FADROMA_BUILD_WORKSPACE_MANIFEST=_Cargo.toml FADROMA_BUILD_OUTPUT_DIR=fixtures ./fadroma.cli.cjs build",
    "mocknet": "FADROMA_CHAIN=Mocknet ./fadroma.cli.cjs",
    "devnet":  "FADROMA_CHAIN=ScrtDevnet ./fadroma.cli.cjs",
    "testnet": "FADROMA_CHAIN=ScrtTestnet ./fadroma.cli.cjs",
    "mainnet": "FADROMA_CHAIN=ScrtMainnet ./fadroma.cli.cjs",

    "docs:dev":      "ensuite-dev",
    "docs:render":   "time ensuite/ensuite-render.cli.mjs",
    "docs:typedoc":  "time typedoc --customCss ./typedoc.css --tsconfig ./tsconfig.json --entryPointStrategy legacy-packages --entryPoints agent --entryPoints connect/* --entryPoints connect --entryPoints .",
    "docs:vp:dev":   "vitepress dev",
    "docs:vp:build": "vitepress build",
    "docs:vp:serve": "vitepress serve"

  },
  "dependencies": {
    "@fadroma/agent": "workspace:*",
    "@fadroma/connect": "workspace:*",
    "@hackbg/logs": "workspace:^2.0.2",
    "@hackbg/cmds": "workspace:^3.0.1",
    "@hackbg/dock": "workspace:^2",
    "@hackbg/file": "workspace:^1.2.2",
    "@hackbg/port": "workspace:^1",
    "@hackbg/hide": "workspace:^1",
    "case": "^1.6.3",
    "dotenv": "^16.0.1",
    "js-yaml": "^4.1.0",
    "prompts": "^2.4.2",
    "simple-git": "^3.7.1"
  },
  "peerDependencies": {
    "@hackbg/ganesha": "^4"
  },
  "peerDependenciesMeta": {
    "@hackbg/ganesha": { "optional": true }
  },
  "devDependencies": {
    "@fadroma/scrt": "workspace:*",
    "@hackbg/ensuite": "workspace:*",
    "@hackbg/ganesha": "workspace:*",
    "@hackbg/fadroma": "workspace:*",
    "@hackbg/spec": "^1",
    "@hackbg/ubik": "^1.3.5",
    "@types/dockerode": "^3.3.14",
    "@types/js-yaml": "^4.0.5",
    "@types/node": "latest",
    "@types/prettyjson": "^0.0.30",
    "@types/prompts": "^2.4.2",
    "@types/secure-random": "^1.1.0",
    "body-parser": "^1.20.0",
    "concurrently": "7.2.2",
    "cross-fetch": "^3.1.5",
    "express": "^4.18.1",
    "freeport-async": "^2.0.0",
    "husky": "^8.0.3",
    "lint-staged": "^13.1.2",
    "typedoc": "0.24.8",
    "typescript": "^5"
  },
  "pnpm": {
    "peerDependencyRules": {
      "ignoreMissing": [
        "google-protobuf",
        "@types/react",
        "react",
        "react-dom",
        "vitepress",
        "ts-node",
        "@algolia/client-search"
      ],
      "allowedVersions": {
        "typescript": "^4.9"
      }
    }
  },
  "lint-staged": {
    "*.ts": "pnpm check && git add pnpm-lock.yaml && pnpm cov"
  }
}
